syntax = "proto3";

package course.auth.user.v1;

option csharp_namespace = "Course.Auth.User.V1";
option go_package = "course/auth/user/v1;userv1";
option java_multiple_files = true;
option java_outer_classname = "UserApiProto";
option java_package = "com.course.auth.user.v1";
option objc_class_prefix = "CAU";
option php_namespace = "Course\\Auth\\User\\V1";

import "course/auth/user/v1/user.proto";
import "validate.proto";

// API сервера пользователей.
service UserAPI {
  // Создает пользователя.
  rpc Create(CreateRequest) returns (CreateResponse);
  // Обновляет пользователя.
  rpc Update(UpdateRequest) returns (UpdateResponse);
  // Получает пользователя.
  rpc Get(GetRequest) returns (GetResponse);
  // Удаляет пользователя.
  rpc Delete(DeleteRequest) returns (DeleteResponse);
}

message CreateRequest {
  string name = 1 [
    (validate.rules).string = {
      min_len: 1
      max_len: 255
    }
  ];
  string email = 2 [
    (validate.rules).string = {
      min_len: 4
      max_len: 255
    }
  ];
  string password = 3 [
    (validate.rules).string = {
      min_len: 7
      max_len: 50
    }
  ];
  string password_confirm = 4 [
    (validate.rules).string = {
      min_len: 7
      max_len: 50
    }
  ];
  Role role = 5 [
    (validate.rules).enum = {
      defined_only: true
    }
  ];
}

message CreateResponse {
  int64 id = 1;
}

message UpdateRequest {
  int64 id = 1 [
    (validate.rules).int64 = {
      gte: 1
    }
  ];
  string name = 2 [
    (validate.rules).string = {
      min_len: 1
      max_len: 255
    }
  ];
  string email = 3 [
    (validate.rules).string = {
      min_len: 4
      max_len: 255
    }
  ];
}

message UpdateResponse {}

message GetRequest {
  int64 id = 1 [
    (validate.rules).int64 = {
      gte: 1
    }
  ];
}

message GetResponse {
  User user = 1;
}

message DeleteRequest {
  int64 id = 1 [
    (validate.rules).int64 = {
      gte: 1
    }
  ];
}

message DeleteResponse {}
